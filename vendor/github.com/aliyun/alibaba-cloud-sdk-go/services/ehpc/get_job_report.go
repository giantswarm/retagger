package ehpc

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetJobReport invokes the ehpc.GetJobReport API synchronously
// api document: https://help.aliyun.com/api/ehpc/getjobreport.html
func (client *Client) GetJobReport(request *GetJobReportRequest) (response *GetJobReportResponse, err error) {
	response = CreateGetJobReportResponse()
	err = client.DoAction(request, response)
	return
}

// GetJobReportWithChan invokes the ehpc.GetJobReport API asynchronously
// api document: https://help.aliyun.com/api/ehpc/getjobreport.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetJobReportWithChan(request *GetJobReportRequest) (<-chan *GetJobReportResponse, <-chan error) {
	responseChan := make(chan *GetJobReportResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetJobReport(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetJobReportWithCallback invokes the ehpc.GetJobReport API asynchronously
// api document: https://help.aliyun.com/api/ehpc/getjobreport.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetJobReportWithCallback(request *GetJobReportRequest, callback func(response *GetJobReportResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetJobReportResponse
		var err error
		defer close(result)
		response, err = client.GetJobReport(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetJobReportRequest is the request struct for api GetJobReport
type GetJobReportRequest struct {
	*requests.RpcRequest
	ReportType  string           `position:"Query" name:"ReportType"`
	EndTime     requests.Integer `position:"Query" name:"EndTime"`
	FilterValue string           `position:"Query" name:"FilterValue"`
	ClusterId   string           `position:"Query" name:"ClusterId"`
	StartTime   requests.Integer `position:"Query" name:"StartTime"`
}

// GetJobReportResponse is the response struct for api GetJobReport
type GetJobReportResponse struct {
	*responses.BaseResponse
	RequestId string             `json:"RequestId" xml:"RequestId"`
	Metrics   string             `json:"Metrics" xml:"Metrics"`
	Data      DataInGetJobReport `json:"Data" xml:"Data"`
}

// CreateGetJobReportRequest creates a request to invoke GetJobReport API
func CreateGetJobReportRequest() (request *GetJobReportRequest) {
	request = &GetJobReportRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("EHPC", "2018-04-12", "GetJobReport", "ehs", "openAPI")
	return
}

// CreateGetJobReportResponse creates a response to parse from GetJobReport response
func CreateGetJobReportResponse() (response *GetJobReportResponse) {
	response = &GetJobReportResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
